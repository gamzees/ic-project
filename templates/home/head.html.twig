<!doctype html>
<!--[if lt IE 7]>      <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang=""> <![endif]-->
<!--[if IE 7]>         <html class="no-js lt-ie9 lt-ie8" lang=""> <![endif]-->
<!--[if IE 8]>         <html class="no-js lt-ie9" lang=""> <![endif]-->
<!--[if gt IE 8]><!--> <html class="no-js" lang=""> <!--<![endif]-->

<!-- cesium -->
<script src="https://cesium.com/downloads/cesiumjs/releases/1.68/Build/Cesium/Cesium.js"></script>
<link href="https://cesium.com/downloads/cesiumjs/releases/1.68/Build/Cesium/Widgets/widgets.css" rel="stylesheet">




<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <title>Newline CSS Template with a video background</title>
    <!--
    Newline Template
    http://www.templatemo.com/tm-503-newline
    -->
    <meta name="description" content="">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="apple-touch-icon" href="apple-touch-icon.png">

    <link rel="stylesheet" href="{{ asset('assets') }}/css/bootstrap.min.css">
    <link rel="stylesheet" href="{{ asset('assets') }}/css/bootstrap-theme.min.css">
    <link rel="stylesheet" href="{{ asset('assets') }}/css/fontAwesome.css">
    <link rel="stylesheet" href="{{ asset('assets') }}/css/templatemo-style.css">
    <link rel="stylesheet" href="{{ asset('assets') }}/css/btn-group.css">
    <link href="css/radios-popup.css" rel="stylesheet">
    <link href="css/spectrum-popup.css" rel="stylesheet">

    <link href="https://fonts.googleapis.com/css?family=Montserrat:100,200,300,400,500,600,700,800,900" rel="stylesheet">

    <script src="{{ asset('assets') }}/js/vendor/modernizr-2.8.3-respond-1.4.2.min.js"></script>
    <script>
        window.onload = function () {

            var chart = new CanvasJS.Chart("chartContainer", {
                animationEnabled: true,
                theme: "light2",
                title: {
                    text: "Monthly Sales Data"
                },
                axisX: {
                    valueFormatString: "MMM"
                },
                axisY: {
                    prefix: "$",
                    labelFormatter: addSymbols
                },
                toolTip: {
                    shared: true
                },
                legend: {
                    cursor: "pointer",
                    itemclick: toggleDataSeries
                },
                data: [
                    {
                        type: "column",
                        name: "Actual Sales",
                        showInLegend: true,
                        xValueFormatString: "MMMM YYYY",
                        yValueFormatString: "$#,##0",
                        dataPoints: [
                            { x: new Date(2016, 0), y: 20000 },
                            { x: new Date(2016, 1), y: 30000 },
                            { x: new Date(2016, 2), y: 25000 },
                            { x: new Date(2016, 3), y: 70000, indexLabel: "High Renewals" },
                            { x: new Date(2016, 4), y: 50000 },
                            { x: new Date(2016, 5), y: 35000 },
                            { x: new Date(2016, 6), y: 30000 },
                            { x: new Date(2016, 7), y: 43000 },
                            { x: new Date(2016, 8), y: 35000 },
                            { x: new Date(2016, 9), y:  30000},
                            { x: new Date(2016, 10), y: 40000 },
                            { x: new Date(2016, 11), y: 50000 }
                        ]
                    },
                    {
                        type: "line",
                        name: "Expected Sales",
                        showInLegend: true,
                        yValueFormatString: "$#,##0",
                        dataPoints: [
                            { x: new Date(2016, 0), y: 40000 },
                            { x: new Date(2016, 1), y: 42000 },
                            { x: new Date(2016, 2), y: 45000 },
                            { x: new Date(2016, 3), y: 45000 },
                            { x: new Date(2016, 4), y: 47000 },
                            { x: new Date(2016, 5), y: 43000 },
                            { x: new Date(2016, 6), y: 42000 },
                            { x: new Date(2016, 7), y: 43000 },
                            { x: new Date(2016, 8), y: 41000 },
                            { x: new Date(2016, 9), y: 45000 },
                            { x: new Date(2016, 10), y: 42000 },
                            { x: new Date(2016, 11), y: 50000 }
                        ]
                    },
                    {
                        type: "area",
                        name: "Profit",
                        markerBorderColor: "white",
                        markerBorderThickness: 2,
                        showInLegend: true,
                        yValueFormatString: "$#,##0",
                        dataPoints: [
                            { x: new Date(2016, 0), y: 5000 },
                            { x: new Date(2016, 1), y: 7000 },
                            { x: new Date(2016, 2), y: 6000},
                            { x: new Date(2016, 3), y: 30000 },
                            { x: new Date(2016, 4), y: 20000 },
                            { x: new Date(2016, 5), y: 15000 },
                            { x: new Date(2016, 6), y: 13000 },
                            { x: new Date(2016, 7), y: 20000 },
                            { x: new Date(2016, 8), y: 15000 },
                            { x: new Date(2016, 9), y:  10000},
                            { x: new Date(2016, 10), y: 19000 },
                            { x: new Date(2016, 11), y: 22000 }
                        ]
                    }]
            });
            chart.render();

            function addSymbols(e) {
                var suffixes = ["", "K", "M", "B"];
                var order = Math.max(Math.floor(Math.log(e.value) / Math.log(1000)), 0);

                if(order > suffixes.length - 1)
                    order = suffixes.length - 1;

                var suffix = suffixes[order];
                return CanvasJS.formatNumber(e.value / Math.pow(1000, order)) + suffix;
            }

            function toggleDataSeries(e) {
                if (typeof (e.dataSeries.visible) === "undefined" || e.dataSeries.visible) {
                    e.dataSeries.visible = false;
                } else {
                    e.dataSeries.visible = true;
                }
                e.chart.render();
            }

        }
    </script>
</head>